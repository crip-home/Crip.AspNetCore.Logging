name: Publish Nuget Package

on:
  create:
    tags:
      - v*

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

  build:

    env:
      BUILD_CONFIG: Release
      SOLUTION: Crip.AspNetCore.Logging.sln
      TESTS: tests/Crip.AspNetCore.Logging.Tests/Crip.AspNetCore.Logging.Tests.csproj
      LIBRARY: src/Crip.AspNetCore.Logging/Crip.AspNetCore.Logging.csproj

    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set default Build Version
        if: startsWith(github.ref, 'refs/tags/v') != true
        run: echo "BUILD_VERSION=1.0.0" >> $GITHUB_ENV
        shell: bash

      - name: Get Build Version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          arrTag=(${GITHUB_REF//\// })
          BUILD_VERSION="${arrTag[2]}"
          BUILD_VERSION="${BUILD_VERSION//v}"
          echo "BUILD_VERSION=${BUILD_VERSION}" >> $GITHUB_ENV
          echo $BUILD_VERSION
        shell: bash

      - name: ðŸ”¨ Setup .NET 3.1 & 6.0
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            3.1.x
            6.0.x

      - name: Restore dependencies
        run: nuget restore $SOLUTION
        shell: bash

      - name: Build
        run: dotnet build $LIBRARY --configuration $BUILD_CONFIG -p:Version=$BUILD_VERSION --no-restore
        shell: bash

      - name: Run tests
        run: dotnet test $TESTS /p:Configuration=$BUILD_CONFIG --no-restore --verbosity normal
        shell: bash

      - name: Publish GitHub NuGet
        if: startsWith(github.ref, 'refs/tags/v')
        run: dotnet nuget push **\*.nupkg -k ${GITHUB_TOKEN} -s https://nuget.pkg.github.com/crip-home/index.json --skip-duplicate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash

      - name: Publish
        if: startsWith(github.ref, 'refs/tags/v')
        run: dotnet nuget push **\*.nupkg -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json --skip-duplicate
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        shell: bash
