name: Publish Crip.AspNetCore.Logging.LongJsonContent Nuget Package

on:
  push:
    tags:
      - long-json-content-v*

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

  publish:
    env:
      BUILD_CONFIG: Release
      SOLUTION: Crip.AspNetCore.Logging.sln
      TESTS: tests/Crip.AspNetCore.Logging.LongJsonContent.Tests/Crip.AspNetCore.Logging.LongJsonContent.Tests.csproj
      LIBRARY: src/Crip.AspNetCore.Logging.LongJsonContent/Crip.AspNetCore.Logging.LongJsonContent.csproj

    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: 📄 checkout
        uses: actions/checkout@v3

      - name: 🔨 set default build version
        if: startsWith(github.ref, 'refs/tags/long-json-content-v') != true
        run: echo "BUILD_VERSION=1.0.0" >> $GITHUB_ENV
        shell: bash

      - name: 🔨 get build version
        if: startsWith(github.ref, 'refs/tags/long-json-content-v')
        run: |
          arrTag=(${GITHUB_REF//\// })
          BUILD_VERSION="${arrTag[2]}"
          BUILD_VERSION="${BUILD_VERSION//long-json-content-v}"
          echo "BUILD_VERSION=${BUILD_VERSION}" >> $GITHUB_ENV
          echo $BUILD_VERSION
        shell: bash

      - name: 💼 output build version
        run: echo $BUILD_VERSION
        shell: bash

      - name: ⬇️ Setup .NET 3.1 & 6.0 & 7.0
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            3.1.x
            6.0.x
            7.0.x

      - name: ⬇️ restore dependencies
        run: dotnet restore $SOLUTION -v m
        shell: bash

      - name: 🛠️ build
        run: dotnet build $LIBRARY -c $BUILD_CONFIG -p:Version=$BUILD_VERSION --no-restore -v m
        shell: bash

      - name: 🧪 run tests
        run: dotnet test $TESTS /p:Configuration=$BUILD_CONFIG --no-restore -v m
        shell: bash

      - name: 🚀 publish to GitHub NuGet
        if: startsWith(github.ref, 'refs/tags/long-json-content-v')
        run: dotnet nuget push **\*${BUILD_VERSION}.nupkg -k ${GITHUB_TOKEN} -s https://nuget.pkg.github.com/crip-home/index.json --skip-duplicate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash

      - name: 🚀 publish to nuget.org
        if: startsWith(github.ref, 'refs/tags/long-json-content-v')
        run: dotnet nuget push **\*${BUILD_VERSION}.nupkg -k ${NUGET_API_KEY} -s https://api.nuget.org/v3/index.json --skip-duplicate
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        shell: bash
