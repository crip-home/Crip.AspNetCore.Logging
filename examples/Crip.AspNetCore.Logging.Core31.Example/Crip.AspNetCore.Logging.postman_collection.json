{
	"info": {
		"_postman_id": "70e864e9-8a61-4b83-8b82-4219362df5c2",
		"name": "Crip.AspNetCore.Logging.Net31 example application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "339835"
	},
	"item": [
		{
			"name": "/",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						""
					]
				},
				"description": "Should log request INFO level as default setting is set to write only that:\n\n`\"Crip.AspNetCore.Logging.RequestLoggingMiddleware\": \"Information\"`\n\n```\n[12:31:32 INF] GET http://localhost:5000/ at 00:00:00.000 with 200 OK {Crip.AspNetCore.Logging.RequestLoggingMiddleware} {EventName=\"HttpResponse\", StatusCode=200, Elapsed=0, Endpoint=\"http://localhost:5000/\", HttpMethod=\"GET\", RequestId=\"0HMK78MPE8O5P:00000001\", RequestPath=\"/\", SpanId=\"|87e60e4b-44282ab5adfa6880.\", TraceId=\"87e60e4b-44282ab5adfa6880\", ParentId=\"\", ConnectionId=\"0HMK78MPE8O5P\"}\n\n```"
			},
			"response": []
		},
		{
			"name": "/undefined",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/undefined",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"undefined"
					]
				},
				"description": "Should log request INFO level as default setting is set to write only that:\n\n`\"Crip.AspNetCore.Logging.RequestLoggingMiddleware\": \"Information\"`\n\n```\n[12:32:25 INF] GET http://localhost:5000/undefined at 00:00:00.000 with 404 NotFound {Crip.AspNetCore.Logging.RequestLoggingMiddleware} {EventName=\"HttpResponse\", StatusCode=404, Elapsed=0, Endpoint=\"http://localhost:5000/undefined\", HttpMethod=\"GET\", RequestId=\"0HMK78MPE8O5P:00000002\", RequestPath=\"/undefined\", SpanId=\"|87e60e4c-44282ab5adfa6880.\", TraceId=\"87e60e4c-44282ab5adfa6880\", ParentId=\"\", ConnectionId=\"0HMK78MPE8O5P\"}\n\n```"
			},
			"response": []
		},
		{
			"name": "/api/test/client",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/test/client",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test",
						"client"
					]
				},
				"description": "This method calls `NamedHttpClient` and produces logs for it as configured:\n\n`\"Crip.AspNetCore.Logging.LoggingHandler.NamedHttpClient\": \"Verbose\"`\n\nClient request:\n\n```\n[12:34:27 VRB] POST http://postman-echo.com/post?foo1=bar1&foo2=bar2 HTTP/1.1\n\n{\"bar1\":\"bazz1\",\"bar2\":\"bazz2\"}\n {Crip.AspNetCore.Logging.LoggingHandler.NamedHttpClient} {EventName=\"HttpRequest\", Endpoint=\"http://postman-echo.com/post?foo1=bar1&foo2=bar2\", HttpMethod=\"POST\", Uri=http://postman-echo.com/post?foo1=bar1&foo2=bar2, ActionId=\"0d73b315-311e-4ae3-ba43-7ff4f284e0ab\", ActionName=\"Crip.AspNetCore.Logging.Core31.Example.Controllers.TestController.Client (Crip.AspNetCore.Logging.Core31.Example)\", RequestId=\"0HMK78OJ4PLBR:00000001\", RequestPath=\"/api/test/client\", SpanId=\"|d06763bd-442e4c24c812660a.\", TraceId=\"d06763bd-442e4c24c812660a\", ParentId=\"\", ConnectionId=\"0HMK78OJ4PLBR\", Scope=[\"HTTP POST http://postman-echo.com/post?foo1=bar1&foo2=bar2\"]}\n\n```\n\nClient request response:\n\n```\n[12:34:27 VRB] HTTP/1.1 200 OK\nDate: Fri, 26 Aug 2022 09:34:00 GMT\nConnection: keep-alive\nETag: W/\"1cc-dujFMcSB/QiDaWG0KDop3h6PmY4\"\nVary: Accept-Encoding\nSet-Cookie: sails.sid=s:tIR0De***; Path=/; HttpOnly\n\n{\"args\":{\"foo1\":\"bar1\",\"foo2\":\"bar2\"},\"data\":{\"bar1\":\"bazz1\",\"bar2\":\"bazz2\"},\"files\":{},\"form\":{},\"headers\":{\"x-forwarded-proto\":\"http\",\"x-forwarded-port\":\"80\",\"host\":\"postman-echo.com\",\"x-amzn-trace-id\":\"Root=1-63089388-58ed2893038d6ba16a4a384b\",\"content-length\":\"31\",\"request-id\":\"|d06763bd-442e4c24c812660a.1.\",\"content-type\":\"application/json; charset=utf-8\"},\"json\":{\"bar1\":\"bazz1\",\"bar2\":\"bazz2\"},\"url\":\"http://postman-echo.com/post?foo1=bar1&foo2=bar2\"}\n {Crip.AspNetCore.Logging.LoggingHandler.NamedHttpClient} {EventName=\"HttpResponse\", StatusCode=200, Elapsed=341, Endpoint=\"http://postman-echo.com/post?foo1=bar1&foo2=bar2\", HttpMethod=\"POST\", Uri=http://postman-echo.com/post?foo1=bar1&foo2=bar2, ActionId=\"0d73b315-311e-4ae3-ba43-7ff4f284e0ab\", ActionName=\"Crip.AspNetCore.Logging.Core31.Example.Controllers.TestController.Client (Crip.AspNetCore.Logging.Core31.Example)\", RequestId=\"0HMK78OJ4PLBR:00000001\", RequestPath=\"/api/test/client\", SpanId=\"|d06763bd-442e4c24c812660a.\", TraceId=\"d06763bd-442e4c24c812660a\", ParentId=\"\", ConnectionId=\"0HMK78OJ4PLBR\", Scope=[\"HTTP POST http://postman-echo.com/post?foo1=bar1&foo2=bar2\"]}\n\n```\n\nTrace details of client request:\n\n```\n[12:34:27 INF] POST http://postman-echo.com/post?foo1=bar1&foo2=bar2 at 00:00:00.340 with 200 OK {Crip.AspNetCore.Logging.LoggingHandler.NamedHttpClient} {EventName=\"HttpResponse\", StatusCode=200, Elapsed=341, Endpoint=\"http://postman-echo.com/post?foo1=bar1&foo2=bar2\", HttpMethod=\"POST\", Uri=http://postman-echo.com/post?foo1=bar1&foo2=bar2, ActionId=\"0d73b315-311e-4ae3-ba43-7ff4f284e0ab\", ActionName=\"Crip.AspNetCore.Logging.Core31.Example.Controllers.TestController.Client (Crip.AspNetCore.Logging.Core31.Example)\", RequestId=\"0HMK78OJ4PLBR:00000001\", RequestPath=\"/api/test/client\", SpanId=\"|d06763bd-442e4c24c812660a.\", TraceId=\"d06763bd-442e4c24c812660a\", ParentId=\"\", ConnectionId=\"0HMK78OJ4PLBR\", Scope=[\"HTTP POST http://postman-echo.com/post?foo1=bar1&foo2=bar2\"]}\n\n```"
			},
			"response": []
		},
		{
			"name": "/api/test",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test"
					]
				},
				"description": "Should log request all levels as this controller is configured to verbose logging:\n\n`\"Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test\": \"Verbose\"`\n\nThe request:\n\n```\n[12:38:01 VRB] GET http://localhost:5000/api/test HTTP/1.1\nConnection: keep-alive\nAccept: */*\nAccept-Encoding: gzip, deflate, br\nHost: localhost:5000\nUser-Agent: PostmanRuntime/7.29.2\nPostman-Token: a4b839fb-ea1d-4c96-abb9-af5a6efbd9b5\n\n {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Index} {EventName=\"HttpRequest\", Endpoint=\"http://localhost:5000/api/test\", HttpMethod=\"GET\", RequestId=\"0HMK78QGI4IFH:00000001\", RequestPath=\"/api/test\",SpanId=\"|737720ca-4f347cfb1cc85d76.\", TraceId=\"737720ca-4f347cfb1cc85d76\", ParentId=\"\", ConnectionId=\"0HMK78QGI4IFH\"}\n\n```\n\nThe response:\n\n```\n[12:38:01 VRB] HTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\n\n{\"shouldAppear\":true}\n {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Index} {EventName=\"HttpResponse\", StatusCode=200, Elapsed=31, Endpoint=\"http://localhost:5000/api/test\", HttpMethod=\"GET\", RequestId=\"0HMK78QGI4IFH:00000001\", RequestPath=\"/api/test\", SpanId=\"|737720ca-4f347cfb1cc85d76.\", TraceId=\"737720ca-4f347cfb1cc85d76\", ParentId=\"\", ConnectionId=\"0HMK78QGI4IFH\"}\n\n```\n\nAnd trace details:\n\n```\n[12:38:01 INF] GET http://localhost:5000/api/test at 00:00:00.030 with 200 OK {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Index} {EventName=\"HttpResponse\", StatusCode=200, Elapsed=31, Endpoint=\"http://localhost:5000/api/test\", HttpMethod=\"GET\", RequestId=\"0HMK78QGI4IFH:00000001\", RequestPath=\"/api/test\", SpanId=\"|737720ca-4f347cfb1cc85d76.\", TraceId=\"737720ca-4f347cfb1cc85d76\", ParentId=\"\", ConnectionId=\"0HMK78QGI4IFH\"}\n\n```"
			},
			"response": []
		},
		{
			"name": "/api/test/error",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/test/error",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test",
						"error"
					]
				},
				"description": "In case of unexpected error in a controller, logs should be written:\n\nRequest:\n\n```\n[12:40:04 VRB] GET http://localhost:5000/api/test/error HTTP/1.1\nAccept-Encoding: gzip, deflate, br\nHost: localhost:5000\nUser-Agent: PostmanRuntime/7.29.2\nPostman-Token: 4c1bb074-9ee2-4ac5-9c07-88a7d92de311\n {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Error} {EventName=\"HttpRequest\", Endpoint=\"http://localhost:5000/api/test/error\", HttpMethod=\"GET\", RequestId=\"0HMK78ROGTIU6:00000001\", RequestPath=\"/api/test/error\", SpanId=\"|9dc8ee56-43a597326c696862.\", TraceId=\"9dc8ee56-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIU6\"}\n\n```\n\nAnd response:\n\n```\n[12:40:04 VRB] HTTP/1.1 500 InternalServerError\nContent-Type: text/html\nSystem ERROR!\n {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Error} {EventName=\"HttpResponse\", StatusCode=500, Elapsed=28, Endpoint=\"http://localhost:5000/api/test/error\", HttpMethod=\"GET\", ActionId=\"036633c4-f8e1-4853-a088-0dded34ce6fe\", ActionName=\"Crip.AspNetCore.Logging.Core31.Example.Controllers.TestController.Error (Crip.AspNetCore.Logging.Core31.Example)\", RequestId=\"0HMK78ROGTIU6:00000001\", RequestPath=\"/api/test/error\", SpanId=\"|9dc8ee56-43a597326c696862.\", TraceId=\"9dc8ee56-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIU6\"}\n\n```\n\nAnd trace info:\n\n```\n[12:40:04 INF] GET http://localhost:5000/api/test/error at 00:00:00.027 with 500 InternalServerError {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Error} {EventName=\"HttpResponse\", StatusCode=500, Elapsed=28, Endpoint=\"http://localhost:5000/api/test/error\", HttpMethod=\"GET\", ActionId=\"036633c4-f8e1-4853-a088-0dded34ce6fe\", ActionName=\"Crip.AspNetCore.Logging.Core31.Example.Controllers.TestController.Error (Crip.AspNetCore.Logging.Core31.Example)\", RequestId=\"0HMK78ROGTIU6:00000001\", RequestPath=\"/api/test/error\", SpanId=\"|9dc8ee56-43a597326c696862.\", TraceId=\"9dc8ee56-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIU6\"}\n\n```"
			},
			"response": []
		},
		{
			"name": "/api/test/error-with-action-filter-handled",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/test/error-with-action-filter-handled",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test",
						"error-with-action-filter-handled"
					]
				},
				"description": "In case of expected error where you have defined exception filter and provide custom response, it should be logged:\n\nRequest:\n\n```\n[12:43:41 VRB] GET http://localhost:5000/api/test/error-with-action-filter-handled HTTP/1.1\nConnection: keep-alive\nAccept: */*\nAccept-Encoding: gzip, deflate, br\nHost: localhost:5000\nUser-Agent: PostmanRuntime/7.29.2\nPostman-Token: fe107c6b-afc6-4683-b7d1-637d639e2fbe\n\n {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Error2} {EventName=\"HttpRequest\", Endpoint=\"http://localhost:5000/api/test/error-with-action-filter-handled\", HttpMethod=\"GET\", RequestId=\"0HMK78ROGTIU8:00000001\", RequestPath=\"/api/test/error-with-action-filter-handled\", SpanId=\"|9dc8ee57-43a597326c696862.\", TraceId=\"9dc8ee57-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIU8\"}\n\n```\n\nResponse:\n\n```\n[12:43:41 VRB] HTTP/1.1 401 Unauthorized\nContent-Type: application/json; charset=utf-8\n\n{\"test\":1}\n {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Error2} {EventName=\"HttpResponse\", StatusCode=401, Elapsed=11, Endpoint=\"http://localhost:5000/api/test/error-with-action-filter-handled\", HttpMethod=\"GET\", RequestId=\"0HMK78ROGTIU8:00000001\", RequestPath=\"/api/test/error-with-action-filter-handled\", SpanId=\"|9dc8ee57-43a597326c696862.\", TraceId=\"9dc8ee57-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIU8\"}\n\n```\n\nAnd trace info:\n\n```\n[12:43:41 INF] GET http://localhost:5000/api/test/error-with-action-filter-handled at 00:00:00.010 with 401 Unauthorized {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Error2} {EventName=\"HttpResponse\",StatusCode=401, Elapsed=11, Endpoint=\"http://localhost:5000/api/test/error-with-action-filter-handled\", HttpMethod=\"GET\", RequestId=\"0HMK78ROGTIU8:00000001\", RequestPath=\"/api/test/error-with-action-filter-handled\", SpanId=\"|9dc8ee57-43a597326c696862.\", TraceId=\"9dc8ee57-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIU8\"}\n\n```"
			},
			"response": []
		},
		{
			"name": "/api/test/pattern-exclude",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/test/pattern-exclude",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test",
						"pattern-exclude"
					]
				},
				"description": "Should not log anything as this request falls under endpoint exclude middleware:\n\n`.AddRequestLoggingExclude(\"/api/test/pattern-exclude*\")`"
			},
			"response": []
		},
		{
			"name": "/api/test/pattern-exclude/sub",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/test/pattern-exclude/sub",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test",
						"pattern-exclude",
						"sub"
					]
				},
				"description": "Should not log anything as this request falls under endpoint exclude middleware:\n\n`.AddRequestLoggingExclude(\"/api/test/pattern-exclude*\")`"
			},
			"response": []
		},
		{
			"name": "/api/test/PATTERN-EXCLUDE/case-insensitive",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/test/PATTERN-EXCLUDE/case-insensitive",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test",
						"PATTERN-EXCLUDE",
						"case-insensitive"
					]
				},
				"description": "Should not log anything as this request falls under endpoint exclude middleware witch is case insensitive:\n\n`.AddRequestLoggingExclude(\"/api/test/pattern-exclude*\")`"
			},
			"response": []
		},
		{
			"name": "/api/test/exact-exclude",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/test/exact-exclude",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test",
						"exact-exclude"
					]
				},
				"description": "Should not log anything as this request falls under endpoint exclude middleware:\n\n`.AddRequestLoggingExclude(\"/api/test/exact-exclude\");`"
			},
			"response": []
		},
		{
			"name": "/api/test/exact-exclude/sub",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/test/exact-exclude/sub",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test",
						"exact-exclude",
						"sub"
					]
				},
				"description": "Should log as this request does not falls under endpoint exclude middleware:\n\n`.AddRequestLoggingExclude(\"/api/test/pattern-exclude*\", \"/api/test/exact-exclude\")`\n\nRequest:\n\n```\n[12:49:22 VRB] GET http://localhost:5000/api/test/exact-exclude/sub HTTP/1.1\nConnection: keep-alive\nAccept: */*\nAccept-Encoding: gzip, deflate, br\nHost: localhost:5000\nUser-Agent: PostmanRuntime/7.29.2\nPostman-Token: 3ab2d82f-bddb-41f5-bcd1-7c9bc826ef28\n\n {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.ExactExcludeSub} {EventName=\"HttpRequest\", Endpoint=\"http://localhost:5000/api/test/exact-exclude/sub\", HttpMethod=\"GET\", RequestId=\"0HMK78ROGTIU8:00000008\", RequestPath=\"/api/test/exact-exclude/sub\", SpanId=\"|9dc8ee5e-43a597326c696862.\", TraceId=\"9dc8ee5e-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIU8\"}\n\n```\n\nResponse:\n\n```\n[12:49:22 VRB] HTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\n\n{\"shouldLog\":true}\n {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.ExactExcludeSub} {EventName=\"HttpResponse\", StatusCode=200, Elapsed=6, Endpoint=\"http://localhost:5000/api/test/exact-exclude/sub\", HttpMethod=\"GET\", RequestId=\"0HMK78ROGTIU8:00000008\", RequestPath=\"/api/test/exact-exclude/sub\", SpanId=\"|9dc8ee5e-43a597326c696862.\", TraceId=\"9dc8ee5e-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIU8\"}\n\n```\n\nAnd trace info:\n\n```\n[12:49:22 INF] GET http://localhost:5000/api/test/exact-exclude/sub at 00:00:00.005 with 200 OK {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.ExactExcludeSub} {EventName=\"HttpResponse\", StatusCode=200,Elapsed=6, Endpoint=\"http://localhost:5000/api/test/exact-exclude/sub\", HttpMethod=\"GET\", RequestId=\"0HMK78ROGTIU8:00000008\", RequestPath=\"/api/test/exact-exclude/sub\", SpanId=\"|9dc8ee5e-43a597326c696862.\", TraceId=\"9dc8ee5e-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIU8\"}\n\n```"
			},
			"response": []
		},
		{
			"name": "/api/test/verbose",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"body\": \"content\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/test/verbose",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test",
						"verbose"
					]
				},
				"description": "Should log request VERBOSE level as setting is set to write that:\n\n`\"Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Verbose\": \"Verbose\"`\n\nRequest:\n\n```\n[12:52:31 VRB] POST http://localhost:5000/api/test/verbose HTTP/1.1\nConnection: keep-alive\nContent-Type: application/json\nAccept: */*\nAccept-Encoding: gzip, deflate, br\nHost: localhost:5000\nUser-Agent: PostmanRuntime/7.29.2\nContent-Length: 27\nPostman-Token: f3be6ab3-abfd-439f-aa1f-4560ab1d2310\n{\"body\":\"content\"}\n {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Verbose} {EventName=\"HttpRequest\", Endpoint=\"http://localhost:5000/api/test/verbose\", HttpMethod=\"POST\", RequestId=\"0HMK78ROGTIU8:0000000C\", RequestPath=\"/api/test/verbose\", SpanId=\"|9dc8ee62-43a597326c696862.\", TraceId=\"9dc8ee62-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIU8\"}\n\n```\n\nResponse:\n\n```\n[12:52:31 VRB] HTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\n{\"level\":\"Verbose\"}\n {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Verbose} {EventName=\"HttpResponse\", StatusCode=200, Elapsed=6, Endpoint=\"http://localhost:5000/api/test/verbose\", HttpMethod=\"POST\", RequestId=\"0HMK78ROGTIU8:0000000C\", RequestPath=\"/api/test/verbose\", SpanId=\"|9dc8ee62-43a597326c696862.\", TraceId=\"9dc8ee62-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIU8\"}\n\n```\n\nAnd trace info:\n\n```\n[12:52:31 INF] POST http://localhost:5000/api/test/verbose at 00:00:00.006 with 200 OK {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Verbose} {EventName=\"HttpResponse\", StatusCode=200, Elapsed=6, Endpoint=\"http://localhost:5000/api/test/verbose\", HttpMethod=\"POST\", RequestId=\"0HMK78ROGTIU8:0000000C\", RequestPath=\"/api/test/verbose\", SpanId=\"|9dc8ee62-43a597326c696862.\", TraceId=\"9dc8ee62-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIU8\"}\n\n```"
			},
			"response": []
		},
		{
			"name": "/api/test/debug",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"body\": \"content\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/test/debug",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test",
						"debug"
					]
				},
				"description": "Should log request DEBUG level as default setting is set to write only that:\n\n`\"Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Debug\": \"Debug\"`\n\nIn this level of logging, request and response body are not logged - only headers.\n\nRequest:\n\n```\n[12:55:58 DBG] POST http://localhost:5000/api/test/debug HTTP/1.1\nConnection: keep-alive\nContent-Type: application/json\nAccept: */*\nAccept-Encoding: gzip, deflate, br\nHost: localhost:5000\nUser-Agent: PostmanRuntime/7.29.2\nContent-Length: 27\nPostman-Token: 0c536c5b-f0c1-4109-b0ec-ceae907a1a8e\n {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Debug} {EventName=\"HttpRequest\", Endpoint=\"http://localhost:5000/api/test/debug\", HttpMethod=\"POST\", RequestId=\"0HMK78ROGTIUA:00000001\", RequestPath=\"/api/test/debug\", SpanId=\"|9dc8ee63-43a597326c696862.\", TraceId=\"9dc8ee63-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIUA\"}\n\n```\n\nResponse:\n\n```\n[12:55:58 DBG] HTTP/1.1 200 OK\nDate: Fri, 26 Aug 2022 09:55:57 GMT\nTransfer-Encoding: chunked\nContent-Type: application/json; charset=utf-8\nServer: Kestrel\n {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Debug} {EventName=\"HttpResponse\", StatusCode=200, Elapsed=5, Endpoint=\"http://localhost:5000/api/test/debug\", HttpMethod=\"POST\", RequestId=\"0HMK78ROGTIUA:00000001\", RequestPath=\"/api/test/debug\", SpanId=\"|9dc8ee63-43a597326c696862.\", TraceId=\"9dc8ee63-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIUA\"}\n\n```\n\nAnd trace info:\n\n```\n[12:55:58 INF] POST http://localhost:5000/api/test/debug at 00:00:00.004 with 200 OK {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Debug} {EventName=\"HttpResponse\", StatusCode=200, Elapsed=5, Endpoint=\"http://localhost:5000/api/test/debug\", HttpMethod=\"POST\", RequestId=\"0HMK78ROGTIUA:00000001\", RequestPath=\"/api/test/debug\", SpanId=\"|9dc8ee63-43a597326c696862.\", TraceId=\"9dc8ee63-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIUA\"}\n\n```"
			},
			"response": []
		},
		{
			"name": "/api/test/info",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/test/info",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test",
						"info"
					]
				},
				"description": "Should log request INFO level as settings is set to write only that:\n\n`\"Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Info\": \"Information\"`\n\n```\n[12:57:24 INF] POST http://localhost:5000/api/test/info at 00:00:00.001 with 200 OK {Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Info} {EventName=\"HttpResponse\", StatusCode=200, Elapsed=2, Endpoint=\"http://localhost:5000/api/test/info\", HttpMethod=\"POST\", RequestId=\"0HMK78ROGTIUA:00000002\", RequestPath=\"/api/test/info\", SpanId=\"|9dc8ee64-43a597326c696862.\", TraceId=\"9dc8ee64-43a597326c696862\", ParentId=\"\", ConnectionId=\"0HMK78ROGTIUA\"}\n\n```"
			},
			"response": []
		},
		{
			"name": "/api/test/warning",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/test/warning",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"test",
						"warning"
					]
				},
				"description": "Should not log anything as \"warning\" level is outside of request logging scope\n\n`\"Crip.AspNetCore.Logging.RequestLoggingMiddleware.Test.Warning\": \"Warning\"`"
			},
			"response": []
		},
		{
			"name": "postman-echo.com",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-custom",
						"value": "custom header value",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bar1\": \"bazz1\",\r\n    \"bar2\": \"bazz2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://postman-echo.com/post?foo1=bar1&foo2=bar2",
					"protocol": "http",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"post"
					],
					"query": [
						{
							"key": "foo1",
							"value": "bar1"
						},
						{
							"key": "foo2",
							"value": "bar2"
						}
					]
				}
			},
			"response": []
		}
	]
}